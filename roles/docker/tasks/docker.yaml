- name: Install required packages
  apt:
    pkg:
    - ca-certificates
    - curl
    - gnupg
    - lsb-release
    - apt-transport-https

- name: Add docker gpg key
  shell:
    cmd: "curl -fsSL https://download.docker.com/linux/raspbian/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg --yes"
  
- name: Add docker repository
  shell:
    cmd: echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/raspbian $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null

- name: Update apt cache
  apt:
    update_cache: yes
    force: yes

- name: Install docker packages
  apt:
    pkg:
      - docker-ce 
      - docker-ce-cli 
      - containerd.io

- name: "set swapaccount=1 in {{ boot_cmdline_path }}"
  include_tasks: ../shared/cmdline.yaml
  vars:
    key: swapaccount
    value: 1
    update: true

- name: "set cgroup_enable=cpuset in {{ boot_cmdline_path }}"
  include_tasks: ../shared/cmdline.yaml
  vars:
    key: cgroup_enable
    value: cpuset
    update: false

- name: "set cgroup_enable=memory in {{ boot_cmdline_path }}"
  include_tasks: ../shared/cmdline.yaml
  vars:
    key: cgroup_enable
    value: memory
    update: false
    # will add the argument if the key-value-pair doesn't exist

- name: "set cgroup_memory=1 in {{ boot_cmdline_path }}"
  include_tasks: ../shared/cmdline.yaml
  vars:
    key: cgroup_memory
    value: 1
    update: true
    # will replace the value of the first matching key, if found;
    # will add it if it's not found

- name: Ensure group dockremap exists
  group:
    name: dockremap
    gid: 10000

- name: Ensure user dockremap exists
  user:
    name: dockremap
    group: dockremap
    uid: 10000
    password: "{{ lookup('password', '/dev/null length=32 chars=ascii_letters,digits,punctuation') | password_hash('sha512') }}"
    shell: /bin/bash

- name: Configure uid mapping
  copy:
    dest: /etc/subuid
    force: yes
    content: "dockremap:10000:65536\n"

- name: Configure gid mapping
  copy:
    dest: /etc/subgid
    force: yes
    content: "dockremap:10000:65536\n"

- name: Update docker daemon config
  copy: 
    src: docker/daemon.json
    dest: /etc/docker/daemon.json
    owner: root
    group: root
    mode: 0644	

- name: Enable content trust
  lineinfile:
    path: "/etc/environment"
    insertafter: "EOF"
    regexp: '^(.*)export(.*)DOCKER_CONTENT_TRUST(.*)='
    line: "export DOCKER_CONTENT_TRUST=1"

